{"version":3,"sources":["utils.js","components/header/styles.js","components/header/Header.js","components/continent/styles.js","assets/icons/CloseIcon.js","components/modal/styles.js","components/modal/Modal.js","components/flag/styles.js","components/flag/Flag.js","components/continent/Continent.js","Global.js","App.js","config.js","index.js"],"names":["continents","groupCountriesByRegion","compose","groupBy","prop","filter","country","includes","filterCountriesByName","text","value","comparator","toLower","indexOf","matchByText","HeaderWrapper","styled","header","Header","filterCountries","useState","valueToSearch","setValueToSearch","onChange","e","target","placeholder","ContinentsWrapper","div","ContinentWrapper","Title","h3","CloseIconWrapper","svg","CloseIcon","aria-hidden","d","fill","ModalWrapper","ModalContent","p","FavoriteIcon","i","SubTitle","CloseModalButton","button","CountryModal","showModal","handleCloseModal","getBorderCountry","handleFavorite","isFavorite","animation","useSpring","opacity","config","slow","style","name","className","onClick","region","population","capital","currencies","map","join","languages","borders","length","nativeName","src","flag","alt","translations","FlagWrapper","Flag","handleOpenModal","Continent","countries","countriesByContinent","setCountriesByContinent","favorites","setFavorites","countrySelected","setCountrySelected","setShowModal","alpha3Code","getBorderCountryNameByCode","useEffect","Object","keys","key","fav","GlobalStyle","createGlobalStyle","normalize","App","setCountries","setFilterCountries","fetchCountries","useCallback","a","window","fetch","response","json","data","position","countriesFiltered","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.549b43ed.chunk.js","sourcesContent":["import { groupBy, prop, filter, compose, toLower } from 'rambda'\n\nexport const continents = [\n  'Asia',\n  'Europe',\n  'Africa',\n  'Oceania',\n  'Americas'\n]\n\nconst filterByContinentList = country =>\ncontinents.includes(prop('region', country))\n\nconst matchByText = text => value => {\n  const comparator = prop('name', value)\n  return comparator && toLower(comparator).indexOf(toLower(text)) !== -1\n}\n\nexport const groupCountriesByRegion = compose(\n  groupBy(prop('region')),\n  filter(filterByContinentList)\n)\n\nexport const filterCountriesByName = text => filter(matchByText(text))\n\nexport const getBorderCountryNameByCode = countries => borders => countries.filter(country => borders.includes(country.alpha3Code))\n","import styled from 'styled-components'\n\nexport const HeaderWrapper = styled.header`\n    background-color: #292828;\n    padding: 40px 60px;\n\n    input {\n        width: 40%;\n        height: 30px;\n        padding: 10px;\n    }\n`\n","import React, { useState } from 'react'\nimport { HeaderWrapper } from './styles'\n\nexport const Header = ({ filterCountries }) => {\n  const [valueToSearch, setValueToSearch] = useState('')\n\n  const handleValueToSearch = (e) => {\n    const value = e.target.value\n\n    setValueToSearch(value)\n    filterCountries(value)\n  }\n\n  return (\n    <HeaderWrapper>\n      <input\n        value={valueToSearch}\n        onChange={handleValueToSearch}\n        placeholder=\"Search\"\n      />\n    </HeaderWrapper>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ContinentsWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    font-size: 16px;\n    padding: 20px;\n`\nexport const ContinentWrapper = styled.div`\n    margin: 10px;\n`\nexport const Title = styled.h3`\n    font-weight: 500;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst CloseIconWrapper = styled.svg`\n  width: 100%;\n  height: 100%;\n`\n\nexport const CloseIcon = () =>\n  <CloseIconWrapper aria-hidden='true'>\n    <path\n      d='M14.0069 11.9675L23.6255 2.35078C23.872 2.08632 24.0062 1.73654 23.9998 1.37512C23.9934 1.0137 23.847 0.668862 23.5913 0.413259C23.3357 0.157657 22.9908 0.0112437 22.6293 0.00486683C22.2678 -0.00151001 21.9179 0.132647 21.6534 0.379074L12.0348 9.99581L2.4162 0.374423C2.15169 0.127997 1.80184 -0.00615949 1.44035 0.000217348C1.07886 0.00659419 0.733953 0.153006 0.478301 0.408609C0.222649 0.664211 0.0762072 1.00905 0.0698292 1.37047C0.0634511 1.73189 0.197634 2.08167 0.444109 2.34613L10.0627 11.9675L0.444109 21.5843C0.307017 21.712 0.197059 21.866 0.120795 22.0371C0.0445312 22.2083 0.0035228 22.393 0.000217153 22.5803C-0.00308849 22.7676 0.0313764 22.9537 0.101555 23.1274C0.171734 23.3011 0.276189 23.4589 0.408689 23.5914C0.541189 23.7239 0.699019 23.8283 0.872764 23.8985C1.04651 23.9686 1.23261 24.0031 1.41996 23.9998C1.60732 23.9965 1.79209 23.9555 1.96325 23.8792C2.13441 23.803 2.28846 23.693 2.4162 23.556L12.0348 13.9392L21.6534 23.556C21.9179 23.8024 22.2678 23.9366 22.6293 23.9302C22.9908 23.9238 23.3357 23.7774 23.5913 23.5218C23.847 23.2662 23.9934 22.9214 23.9998 22.5599C24.0062 22.1985 23.872 21.8487 23.6255 21.5843L14.0069 11.9675Z'\n      fill='#737581'\n    />\n  </CloseIconWrapper>\n","import styled from 'styled-components'\n\nexport const ModalWrapper = styled.div`\n  width: 800px;\n  height: 400px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border-radius: 2px;\n  position: absolute;\n  left: 25%;\n`\n\nexport const ModalContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 30px;\n\n  img {\n    width: 200px;\n    height: 150px;\n    margin-top: 30px;\n    margin-right: 40px;\n  }\n`\nexport const Title = styled.p`\n  font-size: 1.7rem;\n  font-weight: bold;\n`\nexport const FavoriteIcon = styled.i`\n  color: #fee544;\n  cursor: pointer;\n  margin-left: 10px;\n`\nexport const SubTitle = styled.p`\n  font-size: 1.2rem;\n  font-weight: bold;\n  max-width: 300px;\n\n  span {\n    font-weight: 400;\n    margin-right: 10px;\n  }\n`\n\nexport const CloseModalButton = styled.button`\n  cursor: pointer;\n  background: none;\n  border: none;\n  position: absolute;\n  right: 10px;\n  top: 20px;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n`\n","import React from 'react'\nimport { CloseIcon } from '../../assets'\nimport {\n  CloseModalButton,\n  ModalWrapper,\n  ModalContent,\n  Title,\n  SubTitle,\n  FavoriteIcon,\n} from './styles'\nimport { useSpring, animated, config } from 'react-spring'\n\nexport const CountryModal = ({\n  showModal,\n  handleCloseModal,\n  country,\n  getBorderCountry,\n  handleFavorite,\n  isFavorite,\n}) => {\n  const animation = useSpring({\n    opacity: showModal ? 1 : 0,\n    config: config.slow,\n  })\n\n  if (!country) return null\n\n  return (\n    <animated.div style={animation}>\n      <ModalWrapper>\n        <ModalContent>\n          <div>\n            <Title>\n              {country?.name}\n              <FavoriteIcon\n                className={`fa${isFavorite ? 's' : 'r'} fa-star`}\n                onClick={() => {\n                  handleFavorite(country)\n                }}\n              />\n            </Title>\n            <SubTitle>\n              Region: <span>{country?.region}</span>\n            </SubTitle>\n            <SubTitle>\n              Population: <span>{country?.population}</span>\n            </SubTitle>\n            <SubTitle>\n              Capital: <span>{country?.capital}</span>\n            </SubTitle>\n            <SubTitle>\n              Currency:{' '}\n              <span>\n                {country.currencies.map(({ name }) => name).join(', ')}\n              </span>\n            </SubTitle>\n            <SubTitle>\n              Language:{' '}\n              <span>\n                {country.languages.map(({ name }) => name).join(', ')}\n              </span>\n            </SubTitle>\n            <SubTitle>\n              Border Countries:{' '}\n              <span>\n                {getBorderCountry(country.borders).length\n                  ? getBorderCountry(country.borders)\n                      .map(({ nativeName }) => nativeName)\n                      .join(', ')\n                  : 'There are no border countries.'}\n              </span>\n            </SubTitle>\n          </div>\n          <div>\n            <img src={country?.flag} alt={country?.translations?.nativeName} />\n          </div>\n        </ModalContent>\n        <CloseModalButton onClick={handleCloseModal}>\n          <CloseIcon />\n        </CloseModalButton>\n      </ModalWrapper>\n    </animated.div>\n  )\n}\n","import styled from 'styled-components'\n\nexport const FlagWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 10px 0 10px 0;\n\n    img {\n        height: 20px;\n        width: 20px;\n        margin-right: 10px;\n    }\n\n    span {\n        cursor: pointer;\n        &:hover {\n            font-weight: 500;\n        }\n    }\n`\n","import React from 'react'\nimport { FlagWrapper } from './styles'\n\nexport const Flag = ({ country, handleOpenModal }) => {\n  const { name, flag } = country\n\n  return (\n    <FlagWrapper\n      onClick={() => {\n        handleOpenModal(country)\n      }}\n    >\n      <img src={flag} alt={name} />\n      <span>{name}</span>\n    </FlagWrapper>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { groupCountriesByRegion, getBorderCountryNameByCode } from '../../utils'\nimport { ContinentsWrapper, ContinentWrapper, Title } from './styles'\nimport { CountryModal } from '../modal'\nimport { Flag } from '../flag'\n\nexport const Continent = ({ countries }) => {\n  const [countriesByContinent, setCountriesByContinent] = useState([])\n  const [favorites, setFavorites] = useState([])\n  const [countrySelected, setCountrySelected] = useState()\n  const [showModal, setShowModal] = useState(false)\n\n  const handleOpenModal = (country) => {\n    setCountrySelected(country)\n    setShowModal(true)\n  }\n\n  const handleCloseModal = () => {\n    setShowModal(false)\n    setCountrySelected()\n  }\n\n  const handleFavorite = (country) => {\n    const { alpha3Code } = country\n    favorites.includes(alpha3Code)\n      ? setFavorites(favorites.filter((fav) => fav !== alpha3Code))\n      : setFavorites([...favorites, alpha3Code])\n  }\n\n  const getBorderCountry = getBorderCountryNameByCode(countries)\n\n  useEffect(() => {\n    if (countries.length) {\n      setCountriesByContinent(groupCountriesByRegion(countries))\n    }\n  }, [countries])\n\n  return (\n    <ContinentsWrapper>\n      {Object.keys(countriesByContinent).map((key) => (\n        <ContinentWrapper key={key}>\n          <Title>{key}</Title>\n          {countriesByContinent[key].map((country) => (\n            <Flag\n              key={country.name}\n              country={country}\n              handleOpenModal={handleOpenModal}\n            />\n          ))}\n        </ContinentWrapper>\n      ))}\n      <CountryModal\n        showModal={showModal}\n        country={countrySelected}\n        handleFavorite={handleFavorite}\n        getBorderCountry={getBorderCountry}\n        handleCloseModal={handleCloseModal}\n        isFavorite={favorites.includes(countrySelected?.alpha3Code)}\n      />\n    </ContinentsWrapper>\n  )\n}\n","import { createGlobalStyle } from 'styled-components'\nimport { normalize } from 'polished'\n\nexport const GlobalStyle = createGlobalStyle`\n  ${normalize()}\n  html {\n    font-size: 16px;\n    box-sizing: border-box;\n\t}\n\n\t*, *:before, *:after {\n\t\tbox-sizing: inherit;\n\t}\n\n\tbody {\n\t\tmargin: 0;\n\t\tposition: relative;\n\t\tfont-family: Roboto;\n\t}\n\n\tmain {\n\t\twidth: 90%;\n\t\tmargin: 0 auto;\n\t}\n`\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { filterCountriesByName } from './utils'\nimport { Header } from './components/header'\nimport { Continent } from './components/continent'\nimport { BASE_URL } from './config'\nimport { GlobalStyle } from './Global'\n\nfunction App() {\n  const [countries, setCountries] = useState([])\n  const [filterCountries, setFilterCountries] = useState([])\n\n  const handleFilterCountries = (value) => {\n    const countriesFiltered = filterCountriesByName(value)(countries)\n    setFilterCountries(countriesFiltered)\n  }\n\n  const fetchCountries = useCallback(async () => {\n    const response = await window.fetch(BASE_URL)\n    const data = await response.json()\n    setCountries(data)\n  })\n\n  useEffect(() => {\n    fetchCountries()\n  }, [fetchCountries()])\n\n  return (\n    <div className=\"App\" style={{ position: 'relative' }}>\n      <GlobalStyle />\n      <Header filterCountries={handleFilterCountries} />\n      <Continent\n        countries={filterCountries.length ? filterCountries : countries}\n      />\n    </div>\n  )\n}\n\nexport default App\n","export const BASE_URL = 'https://restcountries.eu/rest/v2/all'\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}